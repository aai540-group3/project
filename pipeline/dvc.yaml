stages:
  setup:
    cmd:
      - UV_LINK_MODE=copy uv venv .venv --python 3.11
      - .venv/bin/python -m ensurepip --upgrade
      - .venv/bin/python -m pip install -q uv
      - .venv/bin/uv pip install -q -e .
      - .venv/bin/uv pip install -q -r requirements/base.txt
    outs:
      - .venv:
          cache: false
          persist: true
    deps:
      - requirements/base.txt
    always_changed: false

  prepare:
    cmd:
      - .venv/bin/uv run --with boto3 python -m pipeline infrastruct
      - .venv/bin/uv run --with ucimlrepo --with pyarrow python -m pipeline ingest
    deps:
      - .venv
      - pipeline/__init__.py
      - pipeline/__main__.py
      - pipeline/stages/base.py
      - pipeline/stages/infrastruct.py
      - pipeline/stages/ingest.py
      - requirements/base.txt
    outs:
      - data/raw/data.parquet:
          cache: true
      - data/raw/data.csv:
          cache: true
      - data/raw/variables.json:
          cache: true
      - data/raw/metadata.json:
          cache: true
    metrics:
      - metrics/ingest/metrics.json:
          cache: false
    plots:
      - plots/ingest/missing_values.png:
          x: feature
          y: missing_rate
          title: Distribution - Missing Values
      - plots/ingest/data_types.png:
          x: dtype
          y: count
          title: Distribution - Data Types

  preprocess:
    cmd:
      - .venv/bin/uv run python -m pipeline preprocess
    deps:
      - .venv
      - data/raw/data.csv
      - pipeline/__init__.py
      - pipeline/__main__.py
      - pipeline/stages/base.py
      - pipeline/stages/preprocess.py
      - requirements/base.txt
    outs:
      - data/interim/data.parquet:
          cache: true
    metrics:
      - metrics/preprocess/metrics.json:
          cache: false
    plots:
      - plots/preprocess/missing_values.png:
          x: feature
          y: missing_rate
          title: Heatmap - Missing Values
      - plots/preprocess/time_in_hospital_distribution.png:
          x: time_in_hospital
          y: count
          title: Distribution - time_in_hospital
      - plots/preprocess/num_lab_procedures_distribution.png:
          x: num_lab_procedures
          y: count
          title: Distribution - num_lab_procedures
      - plots/preprocess/num_procedures_distribution.png:
          x: num_procedures
          y: count
          title: Distribution - num_procedures
      - plots/preprocess/num_medications_distribution.png:
          x: num_medications
          y: count
          title: Distribution - num_medications
      - plots/preprocess/number_diagnoses_distribution.png:
          x: number_diagnoses
          y: count
          title: Distribution - number_diagnoses
      - plots/preprocess/number_outpatient_distribution.png:
          x: number_outpatient
          y: count
          title: Distribution - number_outpatient
      - plots/preprocess/number_emergency_distribution.png:
          x: number_emergency
          y: count
          title: Distribution - number_emergency
      - plots/preprocess/number_inpatient_distribution.png:
          x: number_inpatient
          y: count
          title: Distribution - number_inpatient
      - plots/preprocess/readmission_distribution.png:
          x: readmitted
          y: count
          title: Distribution - readmitted

  explore:
    cmd:
      - .venv/bin/uv run python -m pipeline explore
    deps:
      - .venv
      - data/interim/data.parquet
      - pipeline/__init__.py
      - pipeline/__main__.py
      - pipeline/stages/base.py
      - pipeline/stages/explore.py
      - requirements/base.txt
    metrics:
      - metrics/explore/metrics.json:
          cache: false
    plots:
      - plots/explore/lab_results_distribution.png:
          x: result
          y: count
          title: Lab Results Distribution and Readmission Status
      - plots/explore/service_utilization_distribution.png:
          x: value
          y: density
          title: Service Utilization Distribution and Readmission Status
      - plots/explore/clinical_metrics_boxplot.png:
          x: readmitted
          y: value
          title: Clinical Metrics Distribution and Readmission Status
      - plots/explore/demographics_age_distribution.png:
          x: age
          y: count
          title: Demographic Analysis by Age, Race, and Gender
      - plots/explore/correlation_matrix_heatmap.png:
          x: feature1
          y: feature2
          title: Correlation Matrix for Numeric Features
      - plots/explore/feature_importance.png:
          x: importance
          y: feature
          title: Top 20 Features by Importance
      - plots/explore/feature_importance.csv:
          x: feature
          y: importance
          title: Feature Importance Data
      - plots/explore/demographic_numeric_correlation_heatmap.png:
          x: feature1
          y: feature2
          title: Demographic Numeric Correlation Heatmap
      - plots/explore/clinical_numeric_correlation_heatmap.png:
          x: feature1
          y: feature2
          title: Clinical Numeric Correlation Heatmap
      - plots/explore/service_numeric_correlation_heatmap.png:
          x: feature1
          y: feature2
          title: Service Numeric Correlation Heatmap
      - plots/explore/labs_numeric_correlation_heatmap.png:
          x: feature1
          y: feature2
          title: Labs Numeric Correlation Heatmap
      - plots/explore/medications_numeric_correlation_heatmap.png:
          x: feature1
          y: feature2
          title: Medications Numeric Correlation Heatmap
      - plots/explore/diagnosis_numeric_correlation_heatmap.png:
          x: feature1
          y: feature2
          title: Diagnosis Numeric Correlation Heatmap
      - plots/explore/race_distribution.png:
          x: race
          y: count
          title: Race Distribution and Readmission
      - plots/explore/race_chi_square.png:
          x: race
          y: readmitted
          title: Chi-Square Test for Race

  featurize:
    cmd:
      - .venv/bin/uv run --with boto3 python -m pipeline featurize
    deps:
      - .venv
      - data/interim/data.parquet
      - pipeline/__init__.py
      - pipeline/__main__.py
      - pipeline/stages/base.py
      - pipeline/stages/featurize.py
    outs:
      - data/processed/features.parquet:
          cache: true
      - data/processed/features_not_onehot.parquet:
          cache: true
    metrics:
      - metrics/featurize/metrics.json:
          cache: false
      - metrics/featurize/statistics.json:
          cache: false
    plots:
      - plots/featurize/feature_correlations.png:
          cache: false
          title: Feature Correlations Heatmap
      - plots/featurize/feature_importance.png:
          cache: false
          title: Top 20 Features by Importance
      - plots/featurize/feature_importance.csv:
          cache: false
          type: csv
          x: feature
          y: importance
      - plots/featurize/readmission_distribution.png:
          cache: false
          title: Distribution of Readmission
      - plots/featurize/age_distribution.png:
          cache: false
          title: Distribution of Age
      - plots/featurize/time_in_hospital_distribution.png:
          cache: false
          title: Distribution of Time in Hospital
      - plots/featurize/num_med_distribution.png:
          cache: false
          title: Distribution of Number of Medications
      - plots/featurize/service_utilization_distribution.png:
          cache: false
          title: Distribution of Service Utilization
      - plots/featurize/num_procedures_distribution.png:
          cache: false
          title: Distribution of Number of Procedures
      - plots/featurize/num_change_distribution.png:
          cache: false
          title: Distribution of Medication Changes
      - plots/featurize/num_med_time_in_hospital_distribution.png:
          cache: false
          title: Distribution of Medications and Time in Hospital
      - plots/featurize/num_med_num_procedures_distribution.png:
          cache: false
          title: Distribution of Medications and Procedures
      - plots/featurize/time_in_hospital_num_lab_procedures_distribution.png:
          cache: false
          title: Distribution of Time and Lab Procedures
      - plots/featurize/num_med_num_lab_procedures_distribution.png:
          cache: false
          title: Distribution of Medications and Lab Procedures
      - plots/featurize/num_med_number_diagnoses_distribution.png:
          cache: false
          title: Distribution of Medications and Diagnoses
      - plots/featurize/age_number_diagnoses_distribution.png:
          cache: false
          title: Distribution of Age and Diagnoses
      - plots/featurize/change_num_med_distribution.png:
          cache: false
          title: Distribution of Changes and Medications
      - plots/featurize/number_diagnoses_time_in_hospital_distribution.png:
          cache: false
          title: Distribution of Diagnoses and Time
      - plots/featurize/num_med_num_change_distribution.png:
          cache: false
          title: Distribution of Medications and Changes

  feast:
    cmd:
      - docker stop $(docker ps -a -q --filter publish=5432)  &>/dev/null || true
      - .venv/bin/uv run --with psycopg2-binary --with feast[postgres] --with dask[dataframe] python -m pipeline feast
    deps:
      - .venv
      - data/processed/features_not_onehot.parquet
      - data/processed/features.parquet
      - pipeline/stages/base.py
      - pipeline/stages/feast.py
      - pipeline/stages/feature_repo.py
      - requirements/base.txt

  autogluon:
    cmd:
      - .venv/bin/uv run --with autogluon.tabular[lightgbm] --with dvclive python pipeline autogluon
    deps:
      - .venv
      - data/processed/features.parquet
      - pipeline/__init__.py
      - pipeline/__main__.py
      - pipeline/stages/autogluon.py
      - pipeline/stages/base.py
      - requirements/base.txt
    outs:
      - models/autogluon:
          cache: true
    metrics:
      - metrics/autogluon/metrics.json:
          cache: false
      - metrics/autogluon/feature_importance.csv:
          cache: false
    plots:
      - plots/autogluon/confusion_matrix.png:
          title: Confusion Matrix
          x: Predicted
          y: Actual
          template: confusion
      - plots/autogluon/roc_curve.png:
          x: FPR
          y: TPR
          title: ROC Curve
      - plots/autogluon/feature_importance.png:
          y: feature
          x: importance
          title: Top 20 Features by Importance

  logistic:
    cmd:
      - .venv/bin/uv python pipeline logistic
    deps:
      - .venv
      - data/processed/features.parquet
      - pipeline/__init__.py
      - pipeline/__main__.py
      - pipeline/stages/base.py
      - pipeline/stages/logistic.py
      - requirements/base.txt
    outs:
      - models/logistic:
          cache: true
    metrics:
      - metrics/logistic/metrics.json:
          cache: false
      - metrics/logistic/feature_importance.csv:
          cache: false
    plots:
      - plots/logistic/confusion_matrix.png:
          title: Confusion Matrix
          x: Predicted
          y: Actual
          template: confusion
      - plots/logistic/roc_curve.png:
          x: FPR
          y: TPR
          title: ROC Curve
      - plots/logistic/feature_importance.png:
          y: feature
          x: importance
          title: Top 20 Features by Importance

#   optimize:
#     foreach: ${models}
#     do:
#       cmd:
#         - export UV_LINK_MODE=copy && uv venv .venv-optimize-${item} --python 3.11
#         - . .venv-optimize-${item}/bin/activate && export UV_LINK_MODE=copy && uv pip install -r requirements/base.txt
#         - . .venv-optimize-${item}/bin/activate && export UV_LINK_MODE=copy && uv pip install -r requirements/optimize.txt
#         - . .venv-optimize-${item}/bin/activate && python pipeline/stages/optimize.py model=${item}
#       deps:
#         - pipeline/stages/optimize.py
#         - pipeline/models/${item}.py
#         - requirements/base.txt
#         - requirements/optimize.txt
#         - data/processed/train_features.parquet
#         - data/processed/val_features.parquet
#       metrics:
#         - metrics/optimize/${item}/trials.json
#       plots:
#         - metrics/plots/optimize/${item}/parameter_importance.png
#         - metrics/plots/optimize/${item}/optimization_history.png

#   evaluate:
#     cmd:
#       - export UV_LINK_MODE=copy && uv venv .venv-evaluate --python 3.11
#       - . .venv-evaluate/bin/activate && export UV_LINK_MODE=copy && uv pip install -r requirements/base.txt
#       - . .venv-evaluate/bin/activate && export UV_LINK_MODE=copy && uv pip install -r requirements/evaluate.txt
#       - . .venv-evaluate/bin/activate && python pipeline/stages/evaluate.py
#     deps:
#       - pipeline/stages/evaluate.py
#       - requirements/base.txt
#       - requirements/evaluate.txt
#       - data/processed/test_features.parquet
#       - models/*/model.pkl
#     metrics:
#       - metrics/evaluation/model_comparison.json
#     plots:
#       - metrics/plots/evaluation/model_comparison.png
#       - metrics/plots/evaluation/feature_importance.png

#   register:
#     cmd:
#       - export UV_LINK_MODE=copy && uv venv .venv-register --python 3.11
#       - . .venv-register/bin/activate && export UV_LINK_MODE=copy && uv pip install -r requirements/base.txt
#       - . .venv-register/bin/activate && export UV_LINK_MODE=copy && uv pip install -r requirements/register.txt
#       - . .venv-register/bin/activate && python pipeline/stages/register.py
#     deps:
#       - pipeline/stages/register.py
#       - requirements/base.txt
#       - requirements/register.txt
#       - metrics/evaluation/model_comparison.json
#       - models/*/model.pkl
#     outs:
#       - registry/metadata.json

#   deploy:
#     cmd:
#       - export UV_LINK_MODE=copy && uv venv .venv-deploy --python 3.11
#       - . .venv-deploy/bin/activate && export UV_LINK_MODE=copy && uv pip install -r requirements/base.txt
#       - . .venv-deploy/bin/activate && export UV_LINK_MODE=copy && uv pip install -r requirements/deploy.txt
#       - . .venv-deploy/bin/activate && python pipeline/stages/deploy.py
#     deps:
#       - pipeline/stages/deploy.py
#       - requirements/base.txt
#       - requirements/deploy.txt
#       - models/*/model.pkl
#       - metrics/evaluation/model_comparison.json
#     outs:
#       - deploy/huggingface:
#           persist: true

#   serve:
#     cmd:
#       - export UV_LINK_MODE=copy && uv venv .venv-serve --python 3.11
#       - export UV_LINK_MODE=copy && uv pip install -r requirements/serve.txt --python .venv-serve/bin/python
#       - export UV_LINK_MODE=copy && uv pip install -e . --python .venv-serve/bin/python
#       - .venv-serve/bin/uvicorn pipeline.serve.app:app --host 0.0.0.0 --port 8000
#     deps:
#       - pipeline/serve/app.py
#       - models/*/model.pkl
#       - conf/config.yaml
#       - requirements/serve.txt
#     outs:
#       - serve/logs:
#           persist: true

#   monitor:
#     cmd:
#       - export UV_LINK_MODE=copy && uv venv .venv-monitoring --python 3.11
#       - export UV_LINK_MODE=copy && uv pip install -r requirements/monitoring.txt --python .venv-monitoring/bin/python
#       - export UV_LINK_MODE=copy && uv pip install -e . --python .venv-monitoring/bin/python
#       - .venv-monitoring/bin/python pipeline/stages/monitoring.py
#     deps:
#       - pipeline/monitoring/app.py
#       - conf/config.yaml
#     metrics:
#       - metrics/monitoring/system_metrics.json
#     plots:
#       - metrics/plots/monitoring/resource_usage.png
#       - metrics/plots/monitoring/prediction_latency.png
#       - metrics/plots/monitoring/error_rate.png

# artifacts:
#   diabetes-dataset:
#     path: data/raw/data.csv
#     type: dataset
#     desc: "Diabetes 130-US hospitals for years 1999-2008 dataset"
#     labels:
#       - tabular
#       - healthcare
#     meta:
#       source: "UCI Machine Learning Repository"
#       url: https://archive.ics.uci.edu/ml/datasets/diabetes+130-us+hospitals+for+years+1999-2008
#       records: 101766
#       features: 55
#   logistic_regression:
#     path: models/logistic_regression/artifacts/model/model.joblib
#     type: model
#     desc: "Trained Logistic Regression model for readmission prediction"
#     labels:
#       - baseline
#       - interpretable
#     meta:
#       features: "engineered features, standardized"
#       algorithm: sklearn.linear_model.LogisticRegression
#   neural_network:
#     path: models/neural_network/artifacts/model/model.keras
#     type: model
#     desc: "Trained deep Neural Network model for readmission prediction"
#     labels:
#       - deep-learning
#       - tensorflow
#     meta:
#       architecture: "MLP, 3 hidden layers"
#       optimizer: Adam
#       epochs: 100
#   autogluon:
#     path: models/autogluon/artifacts/model/model.pkl
#     type: model
#     desc: "Trained AutoGluon ensemble model for readmission prediction"
#     labels:
#       - automl
#       - ensemble
#     meta:
#       framework: autogluon
#       hyperparameters: "tuned with best_quality preset"

vars:
  - models:
      - logistic
      - neural
      - autogluon
