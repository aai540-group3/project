stages:
  setup:
    cmd:
      - pip install uv virtualenv
      - uv venv --python 3.10
      - . .venv/bin/activate && uv pip install -r requirements.txt
      - . .venv/bin/activate && pip freeze > requirements-frozen.txt
    deps:
      - requirements.txt
    outs:
      - requirements-frozen.txt

  infrastruct:
    cmd: .venv/bin/python src/infrastruct.py
    deps:
      - src/infrastruct.py
      - requirements-frozen.txt

  ingest:
    cmd: .venv/bin/python src/ingest.py
    deps:
      - src/ingest.py
      - requirements-frozen.txt
    outs:
      - data/raw/data.csv
      - data/raw/metadata.json
      - data/raw/variables.json
      - data/raw/data.parquet

  preprocess:
    cmd: .venv/bin/python src/preprocess.py
    deps:
      - src/preprocess.py
      - data/raw/data.csv
      - requirements-frozen.txt
    outs:
      - data/interim/data_cleaned.parquet
      - data/interim/feature_names.joblib

  explore:
    cmd: .venv/bin/python src/explore.py
    deps:
      - src/explore.py
      - data/raw/data.csv
      - data/interim/data_cleaned.parquet
      - requirements-frozen.txt
    outs:
      - reports/plots/readmitted_distribution.png:
          cache: false
      - reports/plots/time_in_hospital_vs_readmission.png:
          cache: false
      - reports/plots/age_vs_readmission.png:
          cache: false
      - reports/plots/service_utilization_vs_readmission.png:
          cache: false
      - reports/plots/correlation_matrix.png:
          cache: false
    metrics:
      - reports/cleanlab/detailed_analysis.txt:
          cache: false
      - reports/cleanlab/problematic_cases.csv:
          cache: false
      - reports/cleanlab/feature_importance.csv:
          cache: false
    plots:
      - reports/cleanlab/cleanlab_confidence_distribution.png:
          cache: false
      - reports/cleanlab/cleanlab_confusion_matrix.png:
          cache: false

  featurize:
    cmd: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python .venv/bin/python src/featurize.py
    deps:
      - src/featurize.py
      - data/interim/data_cleaned.parquet
      - feature_store.yaml
      - requirements-frozen.txt
    outs:
      - data/interim/data_featured.parquet

  train_logistic_regression:
    cmd: .venv/bin/python models/logistic_regression/model.py
    deps:
      - models/logistic_regression/model.py
      - data/interim/data_featured.parquet
      - requirements-frozen.txt

  train_neural_network:
    cmd: .venv/bin/python models/neural_network/model.py
    deps:
      - models/neural_network/model.py
      - data/interim/data_featured.parquet
      - requirements-frozen.txt

  train_autogluon:
    cmd: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python .venv/bin/python models/autogluon/model.py
    deps:
      - models/autogluon/model.py
      - data/interim/data_featured.parquet
      - requirements-frozen.txt
