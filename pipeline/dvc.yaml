stages:
  setup:
    cmd:
      - python3 -m virtualenv .venv
      - . .venv/bin/activate
      - pip install -r requirements.txt
      - pip freeze > requirements-frozen.txt
    deps:
      - requirements.txt
    outs:
      - requirements-frozen.txt
      - .venv

  data_ingest:
    cmd: .venv/bin/python src/ingest.py
    deps:
      - src/ingest.py
      - requirements-frozen.txt
    outs:
      - data/raw/data.csv
      - data/raw/metadata.json
      - data/raw/variables.json
      - data/raw/data.parquet

  preprocess:
    cmd: .venv/bin/python src/preprocess.py
    deps:
      - src/preprocess.py
      - data/raw/data.csv
      - requirements-frozen.txt
    outs:
      - data/interim/data_cleaned.parquet
      - data/interim/feature_names.joblib

  explore:
    cmd: .venv/bin/python src/explore.py
    deps:
      - src/explore.py
      - data/raw/data.csv
      - data/interim/data_cleaned.parquet
      - requirements-frozen.txt
    outs:
      - reports/plots/readmitted_distribution.png
      - reports/plots/time_in_hospital_vs_readmission.png
      - reports/plots/age_vs_readmission.png
      - reports/plots/service_utilization_vs_readmission.png
      - reports/plots/correlation_matrix.png
    metrics:
      - reports/cleanlab/detailed_analysis.txt
      - reports/cleanlab/problematic_cases.csv
      - reports/cleanlab/feature_importance.csv
    plots:
      - reports/cleanlab/cleanlab_confidence_distribution.png
      - reports/cleanlab/cleanlab_confusion_matrix.png

  featurize:
    cmd: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python .venv/bin/python src/featurize.py
    deps:
      - src/featurize.py
      - data/interim/data_cleaned.parquet
      - feature_store.yaml
      - requirements-frozen.txt
    outs:
      - data/interim/data_featured.parquet

  train_logistic_regression:
    cmd: .venv/bin/python models/logistic_regression/model.py
    deps:
      - models/logistic_regression/model.py
      - data/interim/data_featured.parquet
      - requirements-frozen.txt
    outs:
      - models/logistic_regression/artifacts/model/model.joblib
      - models/logistic_regression/artifacts/model/model_summary.txt
      - models/logistic_regression/artifacts/model/scaler.joblib
    metrics:
      - models/logistic_regression/artifacts/metrics/metrics.json
      - models/logistic_regression/artifacts/metrics/feature_importance.csv
    plots:
      - models/logistic_regression/artifacts/plots/confusion_matrix.png
      - models/logistic_regression/artifacts/plots/roc_curve.png
      - models/logistic_regression/artifacts/plots/feature_importance.png

  train_neural_network:
    cmd: .venv/bin/python models/neural_network/model.py
    deps:
      - models/neural_network/model.py
      - data/interim/data_featured.parquet
      - requirements-frozen.txt
    outs:
      - models/neural_network/artifacts/model/model.h5
      - models/neural_network/artifacts/model/model_summary.txt
      - models/neural_network/artifacts/model/scaler.joblib
    metrics:
      - models/neural_network/artifacts/metrics/metrics.json
      - models/neural_network/artifacts/metrics/history.json
    plots:
      - models/neural_network/artifacts/plots/confusion_matrix.png
      - models/neural_network/artifacts/plots/roc_curve.png
      - models/neural_network/artifacts/plots/model_architecture.png

  train_autogluon:
    cmd: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python .venv/bin/python models/autogluon/model.py
    deps:
      - models/autogluon/model.py
      - data/interim/data_featured.parquet
      - requirements-frozen.txt
    outs:
      - models/autogluon/artifacts/model/model_info.txt
      - models/autogluon/artifacts/model/best_model_architecture.txt
      - models/autogluon/artifacts/model/leaderboard.csv
      - models/autogluon/artifacts/model/feature_importance.csv
    metrics:
      - models/autogluon/artifacts/metrics/metrics.json
      - models/autogluon/artifacts/metrics/feature_importance.json
    plots:
      - models/autogluon/artifacts/plots/confusion_matrix.png
      - models/autogluon/artifacts/plots/roc_curve.png
      - models/autogluon/artifacts/plots/feature_importance.png
      - models/autogluon/artifacts/plots/model_feature_importance.png

  visualize:
    cmd: .venv/bin/python src/visualize.py
    deps:
      - src/visualize.py
      - models/autogluon/artifacts/metrics/metrics.json
      - models/logistic_regression/artifacts/metrics/metrics.json
      - models/neural_network/artifacts/metrics/metrics.json
      - data/processed/test.parquet
      - requirements-frozen.txt
    outs:
      - reports/figures/model_comparison.png
      - models/autogluon/artifacts/plots/shap_force_plot.png
      - models/autogluon/artifacts/plots/shap_summary.png
      - models/autogluon/artifacts/plots/shap_importance.png
      - models/logistic_regression/artifacts/plots/shap_force_plot.png
      - models/logistic_regression/artifacts/plots/shap_summary.png
      - models/logistic_regression/artifacts/plots/shap_importance.png
      - models/neural_network/artifacts/plots/shap_force_plot.png
      - models/neural_network/artifacts/plots/shap_summary.png
      - models/neural_network/artifacts/plots/shap_importance.png
