name: Package Repository

on:
  push:
    branches:
      - main
    paths:
      - ".dvcignore"
      - ".env.template"
      - ".gitattributes"
      - ".github/workflows/mlops-pipeline.yml"
      - ".github/workflows/package-repo.yml"
      - ".gitignore"
      - "configs/**"
      - "dvc.lock"
      - "dvc.yaml"
      - "dvclive/**"
      - "LICENSE"
      - "notebooks/**"
      - "packages-packaging.txt"
      - "params.yaml"
      - "README.md"
      - "reports/**"
      - "requirements.txt"
      - "src/**"
      - "terraform/main.tf"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  PACKAGES: packages-packaging.txt

jobs:
  package-repo:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 1

      - name: Cache Apt Packages
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            /var/cache/apt/archives/*.deb
            /var/lib/apt/lists/*
          key: ${{ runner.os }}-apt-${{ hashFiles('$GITHUB_WORKFLOW_PATH') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get --yes install --no-install-recommends $(cat ${{ env.PACKAGES }})

      - name: Create File List
        run: |
          cat << EOF > files.txt
          .dvcignore
          .env.template
          .gitattributes
          .github/workflows/mlops-pipeline.yml
          .gitignore
          configs/
          dvc.lock
          dvc.yaml
          dvclive/
          LICENSE
          notebooks/
          params.yaml
          README.md
          reports/
          requirements.txt
          src/
          terraform/main.tf
          EOF

      - name: Zip Repository
        run: zip -r -0 $(cat files.txt) | pigz -9 > Final_Project_Team_3_Deliverable_3.zip

      - name: Get File Size
        run: echo "FILESIZE=$(stat -c%s Final_Project_Team_3_Deliverable_3.zip)" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config pull.rebase false

      - name: Push to Remote
        run: |
          git add Final_Project_Team_3_Deliverable_3.zip
          if git diff --staged --quiet; then
            echo "No changes detected. Skipping commit and push."
          else
            git commit -m "FILESIZE: $FILESIZE bytes"
            git pull origin main
            git push origin main
            echo "Changes committed and pushed successfully."
          fi

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: aai540-group3/project
          event-type: create-release

      - name: Cleanup
        if: always()
        run: rm -f files.txt
