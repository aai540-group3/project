name: Zip Repository

on:
  push:
    branches:
      - main
    paths:
      - ".dvcignore"
      - ".env.template"
      - ".gitattributes"
      - ".github/workflows/mlops-pipeline.yml"
      - ".github/workflows/zip-repository.yml"
      - ".gitignore"
      - "configs/**"
      - "dvc.lock"
      - "dvc.yaml"
      - "dvclive/**"
      - "LICENSE"
      - "notebooks/**"
      - "params.yaml"
      - "README.md"
      - "reports/**"
      - "requirements.txt"
      - "src/**"
      - "terraform/main.tf"
  workflow_dispatch:

env:
  REPO_NAME: ${{ secrets.REPO_NAME }}
  EVENT_TYPE: create-release
  ZIP_FILENAME: "Final_Project_Team_3_Deliverable_3.zip"

jobs:
  zip-repo:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pigz
        run: sudo apt-get install -y pigz

      - name: Create temporary directory
        run: mkdir -p temp_repo

      - name: Copy files to temporary directory
        run: |
          cp -r ./* temp_repo/
          find temp_repo -name ".git" -prune -o -type f -name "*.zip" -delete

      - name: Zip repository
        run: zip -r -0 -9 temp_repo/ | pigz -9 > ${{ env.ZIP_FILENAME }}
        if: ${{ failure() }}
        continue-on-error: false

      - name: Cleanup temporary directory
        run: rm -rf temp_repo

      - name: Check zip file size
        run: ls -lh ${{ env.ZIP_FILENAME }}

      - name: Configure Git
        run: |
          git config --global user.email ${{ secrets.GIT_EMAIL }}
          git config --global user.name ${{ secrets.GIT_USERNAME }}

      - name: Add, commit, and push zip file
        run: |
          git add ${{ env.ZIP_FILENAME }}
          git commit -m "Update ${{ env.ZIP_FILENAME }}"
          git pull origin main --rebase
          git push origin main

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: ${{ env.REPO_NAME }}
          event-type: ${{ env.EVENT_TYPE }}
