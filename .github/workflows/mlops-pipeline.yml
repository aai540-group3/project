name: MLOps Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "conf/**"
      - "dvc.yaml"
      - "params.yaml"
      - "dvc.lock"
      - "requirements.txt"
      - ".github/workflows/mlops-pipeline.yml"
  pull_request:
    branches:
      - main
    paths:
      - "src/**"
      - "conf/**"
      - "dvc.yaml"
      - "params.yaml"
      - "dvc.lock"
      - "requirements.txt"
      - ".github/workflows/mlops-pipeline.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-mlops-pipeline:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      DVC_STUDIO_TOKEN: ${{ secrets.DVC_STUDIO_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Cache Python dependencies
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9  # v4.0.2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3  # v5.2.0
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure DVC remotes
        run: |
          dvc remote modify models_remote region $AWS_DEFAULT_REGION
          dvc remote modify datasets_remote region $AWS_DEFAULT_REGION
        shell: bash

      - name: Cache DVC repository
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9  # v4.0.2
        with:
          path: .dvc
          key: ${{ runner.os }}-dvc-${{ hashFiles('**/dvc.lock') }}
          restore-keys: |
            ${{ runner.os }}-dvc-

      - name: Handle potentially corrupted DVC files
        run: |
          dvc status -c | awk '/missing/{print $2}' | xargs -I {} sh -c 'dvc remove {} && dvc commit {}'
        shell: bash

      - name: Pull data and models from DVC remotes
        run: |
          dvc pull --force

      - name: Check if model exists
        id: check-model
        run: |
          if [ ! -f "models/trained_model.joblib" ]; then
            echo "model_missing=true" >> $GITHUB_OUTPUT
          fi

      - name: Run DVC pipeline
        run: |
          if [ "${{ steps.check-model.outputs.model_missing }}" == "true" ]; then
            echo "Model is missing. Running 'dvc repro train' first..."
            dvc repro train
          fi
          dvc exp run --run-all  # Run all queued experiments

      - name: Push data and models to DVC remotes
        if: always()
        run: |
          dvc push

      - name: Commit and push changes
        if: always()
        uses: stefanzweifel/git-auto-commit-action@8621497c8c39c72f3e2a999a26b4ca1b5058a842  # v5.0.1
        with:
          commit_message: "Update DVC artifacts and metrics"
          branch: ${{ github.ref }}
          file_pattern: |
            dvc.lock
            dvclive/*
            dvclive_evaluate/*
            reports/metrics.json
