name: MLOps Pipeline

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/mlops-pipeline.yml"
      - "pipeline/**"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/mlops-pipeline.yml"
      - "pipeline/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  run-mlops-pipeline:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DATASETS_REMOTE: ${{ secrets.DATASETS_REMOTE }}
      DVC_STUDIO_TOKEN: ${{ secrets.DVC_STUDIO_TOKEN }}
      MODELS_REMOTE: ${{ secrets.MODELS_REMOTE }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: "3.11"

      - name: Cache Python Virtualenv
        id: cache-venv
        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1
        with:
          path: pipeline/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('pipeline/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Setup Virtual Environment
        working-directory: pipeline
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python3 -m venv .venv

      - name: Install Python Dependencies
        working-directory: pipeline
        run: |
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install uv
          uv pip install -r requirements.txt

      - name: Configure DVC
        working-directory: pipeline
        run: |
          source .venv/bin/activate
          dvc init --no-scm -f
          dvc config core.analytics false
          dvc config core.autostage true
          dvc config hydra.enabled true
          dvc config studio.url https://studio.iterative.ai
          dvc remote add -f datasets_remote $DATASETS_REMOTE -d
          dvc remote add -f models_remote $MODELS_REMOTE
          dvc remote modify datasets_remote region $AWS_DEFAULT_REGION
          dvc remote modify models_remote region $AWS_DEFAULT_REGION
          dvc remote list

      - name: Run DVC Pipeline
        working-directory: pipeline
        run: |
          source .venv/bin/activate
          dvc repro -f

      - name: Push to DVC Remotes
        if: always()
        working-directory: pipeline
        run: |
          source .venv/bin/activate
          dvc push

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config pull.rebase false

      - name: Push to Git Remote
        if: always()
        id: commit_and_push
        continue-on-error: true
        run: |
          git add pipeline
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "CHANGED=false" >> $GITHUB_ENV
          else
            git commit -m "Update DVC artifacts and metrics"
            git push origin main || {
              echo "Push failed. Creating a pull request..."
              gh pr create --title "Update DVC artifacts and metrics" --body "Push to main failed. Updated DVC artifacts included." --label "automated-pr"
            }
            echo "CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Repository Dispatch
        if: env.CHANGED == 'true'
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: aai540-group3/project
          event-type: package-deliverables
