name: MLOps Pipeline

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/mlops-pipeline.yml"
      - "pipeline/**"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/mlops-pipeline.yml"
      - "pipeline/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  run-mlops-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.11"

      - name: Cache Python Virtualenv
        id: cache-venv
        uses: actions/cache@v4.1.2
        with:
          path: pipeline/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('pipeline/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Setup Virtual Environment
        working-directory: pipeline
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python3 -m venv .venv
          pip install uv

      - name: Install Python Dependencies
        working-directory: pipeline
        run: |
          source .venv/bin/activate
          pip install --upgrade pip
          uv pip install -r requirements.txt

      - name: Configure DVC
        working-directory: pipeline
        run: |
          source .venv/bin/activate
          dvc init --no-scm -f
          dvc config core.analytics false
          dvc config core.autostage true
          dvc config hydra.enabled true
          dvc config studio.url https://studio.iterative.ai
          dvc remote add -f datasets_remote ${{ secrets.DATASETS_REMOTE }} -d
          dvc remote add -f models_remote ${{ secrets.MODELS_REMOTE }}
          dvc remote modify datasets_remote region ${{ secrets.AWS_DEFAULT_REGION }}
          dvc remote modify models_remote region ${{ secrets.AWS_DEFAULT_REGION }}
          dvc remote list

      - name: Run DVC Pipeline
        working-directory: pipeline
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          EMAILS: ${{ secrets.EMAILS }}
          INITIAL_PASSWORD: ${{ secrets.INITIAL_PASSWORD }}
          GROUP_NAME: ${{ secrets.GROUP_NAME }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          TABLE_NAME: ${{ secrets.TABLE_NAME }}
          BUCKET_KEYS: ${{ secrets.BUCKET_KEYS }}
        run: |
          source .venv/bin/activate
          dvc repro -f

      - name: Push to DVC Remotes
        if: always()
        working-directory: pipeline
        run: |
          source .venv/bin/activate
          dvc push

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config pull.rebase false

      - name: Push to Git Remote
        if: always()
        id: commit_and_push
        continue-on-error: true
        run: |
          git add pipeline
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "CHANGED=false" >> $GITHUB_ENV
          else
            git commit -m "Update DVC artifacts and metrics"
            git push origin main || {
              echo "Push failed. Creating a pull request..."
              gh pr create --title "Update DVC artifacts and metrics" --body "Push to main failed. Updated DVC artifacts included." --label "automated-pr"
            }
            echo "CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Repository Dispatch
        if: env.CHANGED == 'true'
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: aai540-group3/project
          event-type: package-deliverables