name: 'Continuous Integration and Continuous Deployment'

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TF_LOG: DEBUG

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
      with:
        terraform_version: '1.9.5'

    - name: Execute Terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_state_bucket_name: ${{ secrets.TF_VAR_STATE_BUCKET_NAME }}
        TF_VAR_dynamodb_table_name: ${{ secrets.TF_VAR_DYNAMODB_TABLE_NAME }}
        TF_VAR_tf_state_key: ${{ secrets.TF_STATE_KEY }}
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
      run: |
        terraform init \
          -backend-config="bucket=${{ env.TF_VAR_state_bucket_name }}" \
          -backend-config="key=${{ env.TF_VAR_tf_state_key }}" \
          -backend-config="region=${{ env.TF_VAR_aws_region }}" \
          -backend-config="dynamodb_table=${{ env.TF_VAR_dynamodb_table_name }}"

        terraform plan

        terraform apply -auto-approve -input=false 
