name: Generate PDFs

on:
  push:
    paths:
      - ".github/workflows/generate-pdfs.yml"
      - "docs/design-document/Final_Project_Team_3_Deliverable_1.tex"
      - "docs/design-document/references.bib"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  REPO_NAME: aai540-group3/project
  EVENT_TYPE: create-release

jobs:
  generate-pdfs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up environment variables
        run: |
          echo "REPO_ROOT=$(git rev-parse --show-toplevel)" >> $GITHUB_ENV
          echo "DESIGN_DOC_DIR=$REPO_ROOT/docs/design-document" >> $GITHUB_ENV
          echo "TEX_FILE=$REPO_ROOT/docs/design-document/Final_Project_Team_3_Deliverable_1.tex" >> $GITHUB_ENV
          echo "BIB_FILE=$REPO_ROOT/docs/design-document/references.bib" >> $GITHUB_ENV
          echo "PDF_FILE=$REPO_ROOT/docs/design-document/Final_Project_Team_3_Deliverable_1.pdf" >> $GITHUB_ENV
          echo "ROOT_PDF_FILE=$REPO_ROOT/Final_Project_Team_3_Deliverable_1.pdf" >> $GITHUB_ENV

      - name: Cache apt packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('/etc/apt/sources.list') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install TeX and additional tools
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            biber \
            texlive \
            texlive-latex-extra \
            texlive-fonts-extra \
            texlive-bibtex-extra \
            texlive-science \
            texlive-extra-utils \
            poppler-utils

      - name: Remove existing PDFs
        run: |
          rm -f "$PDF_FILE"
          rm -f "$ROOT_PDF_FILE"

      - name: Generate PDFs
        run: |
          TEXINPUTS="$DESIGN_DOC_DIR:."
          pdflatex -interaction=nonstopmode -file-line-error -halt-on-error "$TEX_FILE"
          biber "$BIB_FILE"
          pdflatex -interaction=nonstopmode -file-line-error -halt-on-error "$TEX_FILE"
          pdflatex -interaction=nonstopmode -file-line-error -halt-on-error "$TEX_FILE"

      - name: Check if PDF was generated
        run: |
          if [ ! -f "$PDF_FILE" ]; then
            echo "Error: PDF generation failed!"
            exit 1
          fi

      - name: Copy PDF to root
        run: |
          cp "$PDF_FILE" "$ROOT_PDF_FILE"

      - name: Get word count
        run: |
          WORDS=$(texcount -1 -sum -inc "$TEX_FILE" | grep "Sum count:" | awk '{print $3}')
          echo "WORDS=$WORDS" >> $GITHUB_ENV

      - name: Get page count
        run: |
          PAGES=$(pdfinfo "$PDF_FILE" | grep Pages: | awk '{print $2}')
          echo "PAGES=$PAGES" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Add, commit, and push files
        run: |
          git add "$ROOT_PDF_FILE"
          git commit -m "WORDS: $WORDS | PAGES: $PAGES"
          git pull origin main
          git push origin main

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: ${{ env.REPO_NAME }}
          event-type: ${{ env.EVENT_TYPE }}
