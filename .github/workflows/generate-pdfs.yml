name: Generate PDFs

on:
  push:
    paths:
      - ".github/workflows/generate-pdfs.yml"
      - "docs/design-document/Final_Project_Team_3_Deliverable_1.tex"
      - "docs/design-document/references.bib"
      - "packages-tex.txt"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  PACKAGES: packages-tex.txt

jobs:
  generate-pdfs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 1

      - name: Cache Apt Packages
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            /var/cache/apt/archives/*.deb
            /var/lib/apt/lists/*
            ! /var/lib/apt/lists/partial
          key: ${{ runner.os }}-apt-${{ hashFiles('project/.github/workflows/generate-pdfs.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get --yes install --no-install-recommends $(cat ${{ env.PACKAGES }})

      - name: Generate PDFs
        working-directory: docs/design-document
        run: |
          pdflatex -interaction=nonstopmode Final_Project_Team_3_Deliverable_1.tex
          biber --debug Final_Project_Team_3_Deliverable_1
          pdflatex -interaction=nonstopmode Final_Project_Team_3_Deliverable_1.tex
          pdflatex -interaction=nonstopmode Final_Project_Team_3_Deliverable_1.tex

      - name: Move PDF to Top-Level Repo Folder
        working-directory: docs/design-document
        run: |
          cp Final_Project_Team_3_Deliverable_1.pdf ../../

      - name: Calculate Page Count
        id: page_count
        working-directory: docs/design-document
        run: |
          PAGES=$(pdfinfo Final_Project_Team_3_Deliverable_1.pdf | grep Pages | awk '{print $2}')
          echo "PAGES=$PAGES" >> $GITHUB_ENV

      - name: Calculate Word Count
        id: word_count
        working-directory: docs/design-document
        run: |
          WORDS=$(pdftotext Final_Project_Team_3_Deliverable_1.pdf - | wc -w)
          echo "WORDS=$WORDS" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config pull.rebase false

      - name: Push to Remote
        run: |
          git add Final_Project_Team_3_Deliverable_1.pdf
          if git diff --staged --quiet; then
            echo "No changes detected. Skipping commit and push."
            echo "CHANGED=false" >> $GITHUB_ENV
          else
            git stash
            git pull origin main
            git stash pop
            git commit -m "PAGES: ${{ env.PAGES }} | WORDS: ${{ env.WORDS }}"
            git push origin main || {
              echo "Push failed. Creating a pull request..."
              gh pr create --title "Automated PR" --body "Push to main failed. Updated PDF included."
            }
            echo "Changes committed and pushed successfully (or pull request created)."
            echo "CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Repository Dispatch
        if: env.CHANGED == 'true'
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: aai540-group3/project
          event-type: package-deliverables
