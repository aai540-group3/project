name: Generate PDFs

on:
  push:
    paths:
      - ".github/workflows/generate-pdfs.yml"
      - "docs/design-document/Final_Project_Team_3_Deliverable_1.tex"
      - "docs/design-document/references.bib"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  generate-pdfs:
    runs-on: ubuntu-latest
    env:
      REPO_ROOT: ${{ github.workspace }}
      DESIGN_DOC_DIR: ${{ github.workspace }}/docs/design-document
      BASE_NAME: Final_Project_Team_3_Deliverable_1
      REPO_NAME: aai540-group3/project
      EVENT_TYPE: create-release
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set Environment Variables
        run: |
          echo "TEX_FILE=$DESIGN_DOC_DIR/$BASE_NAME.tex" >> $GITHUB_ENV
          echo "BIB_FILE=$DESIGN_DOC_DIR/references.bib" >> $GITHUB_ENV
          echo "PDF_FILE=$DESIGN_DOC_DIR/$BASE_NAME.pdf" >> $GITHUB_ENV
          echo "ROOT_PDF_FILE=$REPO_ROOT/$BASE_NAME.pdf" >> $GITHUB_ENV

      - name: Print Environment Variables
        run: |
          echo "REPO_ROOT: $REPO_ROOT"
          echo "DESIGN_DOC_DIR: $DESIGN_DOC_DIR"
          echo "TEX_FILE: $TEX_FILE"
          echo "BIB_FILE: $BIB_FILE"
          echo "PDF_FILE: $PDF_FILE"
          echo "ROOT_PDF_FILE: $ROOT_PDF_FILE"
          echo "Current directory: $(pwd)"
          ls -la
          echo "Checking file existence and permissions:"
          for file in "$TEX_FILE" "$BIB_FILE"; do
            if [ -f "$file" ]; then
              echo "$file exists. Permissions: $(ls -l "$file")"
            else
              echo "$file does not exist."
            fi
          done
          echo "Contents of DESIGN_DOC_DIR:"
          ls -la "$DESIGN_DOC_DIR" || echo "DESIGN_DOC_DIR does not exist or is not accessible"

      - name: Cache Apt Packages
        uses: actions/cache@v3
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('/etc/apt/sources.list') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install TeX and Tools
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            biber \
            poppler-utils \
            texlive \
            texlive-bibtex-extra \
            texlive-extra-utils \
            texlive-fonts-extra \
            texlive-lang-all \
            texlive-latex-extra \
            texlive-science

      - name: Remove Old PDFs
        run: |
          rm -f "$PDF_FILE"
          rm -f "$ROOT_PDF_FILE"

      - name: Generate PDFs
        run: |
          cd "$DESIGN_DOC_DIR"
          TEXINPUTS=".:$TEXINPUTS"
          pdflatex -interaction=nonstopmode -file-line-error -halt-on-error "$BASE_NAME.tex"
          biber "$BASE_NAME"
          pdflatex -interaction=nonstopmode -file-line-error -halt-on-error "$BASE_NAME.tex"
          pdflatex -interaction=nonstopmode -file-line-error -halt-on-error "$BASE_NAME.tex"

      - name: Check for PDF
        run: |
          if [ ! -f "$PDF_FILE" ]; then
            echo "ERROR: PDF generation failed!"
            exit 1
          fi

      - name: Copy PDF to Top-Level Repo Directory
        run: |
          cp "$PDF_FILE" "$ROOT_PDF_FILE"

      - name: Get Word Count
        run: |
          WORD_COUNT=$(texcount -1 -sum "$TEX_FILE")
          echo "WORD_COUNT=$WORD_COUNT" >> $GITHUB_ENV

      - name: Get Page Count
        run: |
          PAGES=$(pdfinfo "$PDF_FILE" | grep Pages: | awk '{print $2}')
          echo "PAGES=$PAGES" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Push to Remote
        run: |
          git add "$ROOT_PDF_FILE"
          git commit -m "WORDS: $WORD_COUNT | PAGES: $PAGES"
          git pull --rebase
          git push

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: ${{ env.REPO_NAME }}
          event-type: ${{ env.EVENT_TYPE }}
