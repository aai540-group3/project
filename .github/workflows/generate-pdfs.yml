name: Generate PDFs

on:
  push:
    paths:
      - "docs/design-document/Final_Project_Team_3_Deliverable_1.tex"
      - "docs/design-document/references.bib"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  generate-pdfs:
    runs-on: ubuntu-latest
    env:
      REPO_ROOT: ${{ github.workspace }}
      TEX_FILE: ${{ github.workspace }}/docs/design-document/Final_Project_Team_3_Deliverable_1.tex
      BIB_FILE: ${{ github.workspace }}/docs/design-document/references.bib
      PDF_FILE: ${{ github.workspace }}/docs/design-document/Final_Project_Team_3_Deliverable_1.pdf
      ROOT_PDF_FILE: ${{ github.workspace }}/Final_Project_Team_3_Deliverable_1.pdf
      REPO_NAME: aai540-group3/project #Added repository name
      EVENT_TYPE: create-release # Added event type

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cache apt packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('/etc/apt/sources.list') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install TeX
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            biber \
            texlive \
            texlive-latex-extra \
            texlive-fonts-extra \
            texlive-bibtex-extra \
            texlive-science

      - name: Remove existing PDFs
        run: |
          rm -f "${{ env.PDF_FILE }}"
          rm -f "${{ env.ROOT_PDF_FILE }}"

      - name: Generate PDFs
        run: |
          TEXINPUTS="${{ env.REPO_ROOT }}/docs/design-document:." \
          pdflatex -interaction=nonstopmode -file-line-error -halt-on-error "${{ env.TEX_FILE }}"
          biber "${{ env.BIB_FILE }}"
          pdflatex -interaction=nonstopmode -file-line-error -halt-on-error "${{ env.TEX_FILE }}"
          pdflatex -interaction=nonstopmode -file-line-error -halt-on-error "${{ env.TEX_FILE }}"

      - name: Check if PDF was generated
        run: |
          if [ ! -f "${{ env.PDF_FILE }}" ]; then
            echo "Error: PDF generation failed!"
            exit 1
          fi

      - name: Move PDF to root
        run: |
          mv "${{ env.PDF_FILE }}" "${{ env.ROOT_PDF_FILE }}"

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit and Push Files
        run: |
          git add "${{ env.ROOT_PDF_FILE }}"
          git commit -m "Push PDF and source files" || echo "Nothing to commit"
          git pull origin main --rebase || echo "Pull failed"
          git push origin main || echo "Push failed"

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: ${{ env.REPO_NAME }}
          event-type: ${{ env.EVENT_TYPE }}
