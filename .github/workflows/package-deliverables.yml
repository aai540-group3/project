name: Package Deliverables

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/package-deliverables.yml"
      - "pipeline/**"
      - "LICENSE"
      - "README.md"
      - "Final_Project_Team_3_Deliverable_1.pdf"
      - "Final_Project_Team_3_Deliverable_2.mp4"
      - "Final_Project_Team_3_Deliverable_2.pptx"
      - "manifest.json"
  repository_dispatch:
    types:
      - package-deliverables
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  PACKAGES: packages-packging.txt
  MANIFEST_FILE: manifest.json

jobs:
  check-manifest:
    runs-on: ubuntu-latest
    outputs:
      manifest_changed: ${{ steps.manifest_check.outputs.manifest_changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Apt Archives
        uses: actions/cache@v3
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles(env.PACKAGES) }}

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get --yes install --no-install-recommends $(cat ${{ env.PACKAGES }})
          sudo apt-get install pigz

      - name: Zip Manifest and Related Files
        run: |
          pigz -r -9 manifest_files.zip $MANIFEST_FILE $(jq -r '.files[]' $MANIFEST_FILE)

      - name: Compute Current Hash
        id: compute_hash
        run: |
          CURRENT_HASH=$(sha256sum manifest_files.zip | awk '{print $1}')
          echo "CURRENT_HASH=$CURRENT_HASH" >> $GITHUB_ENV

      - name: Get Previous Hash
        id: get_previous_hash
        run: |
          PREVIOUS_HASH=$(jq -r '.hash // ""' $MANIFEST_FILE)
          echo "PREVIOUS_HASH=$PREVIOUS_HASH" >> $GITHUB_ENV

      - name: Compare Hashes
        id: manifest_check
        run: |
          if [ "$CURRENT_HASH" = "$PREVIOUS_HASH" ]; then
            echo "Hashes match. Skipping package generation."
            echo "manifest_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Hashes do not match. Proceeding with package generation."
            echo "manifest_changed=true" >> $GITHUB_OUTPUT
          fi

  package-repo:
    runs-on: ubuntu-latest
    needs: check-manifest
    if: needs.check-manifest.outputs.manifest_changed == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Cache Apt Archives
        uses: actions/cache@v3
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles(env.PACKAGES) }}

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get --yes install --no-install-recommends $(cat ${{ env.PACKAGES }})
          sudo apt-get install pigz

      - name: Zip Deliverables
        run: |
          pigz -r -9 Final_Project_Team_3_Deliverable_3.zip $(jq -r '.files[]' $MANIFEST_FILE)

      - name: Get File Size
        id: get_file_size
        run: |
          FILESIZE=$(stat -c%s Final_Project_Team_3_Deliverable_3.zip)
          echo "FILESIZE=$FILESIZE" >> $GITHUB_ENV

      - name: Get File Hash
        id: get_file_hash
        run: |
          FILEHASH=$(sha256sum Final_Project_Team_3_Deliverable_3.zip | awk '{print $1}')
          echo "FILEHASH=$FILEHASH" >> $GITHUB_ENV

      - name: Update manifest.json with Hash and Size
        run: |
          jq --arg FILEHASH "$FILEHASH" --arg FILESIZE "$FILESIZE" '.hash = $FILEHASH | .size = $FILESIZE' $MANIFEST_FILE > temp_manifest.json
          mv temp_manifest.json $MANIFEST_FILE

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config pull.rebase false

      - name: Push to Remote
        run: |
          git add Final_Project_Team_3_Deliverable_3.zip $MANIFEST_FILE
          if git diff --staged --quiet; then
            echo "No changes detected. Skipping commit and push."
            echo "CHANGED=false" >> $GITHUB_ENV
          else
            git stash
            git pull origin main
            git stash pop
            git add Final_Project_Team_3_Deliverable_3.zip $MANIFEST_FILE
            git commit -m "Update deliverables: Size ${FILESIZE} bytes"
            git push origin main || {
              echo "Push failed. Creating a pull request..."
              gh pr create --title "Automated Deliverables Update" --body "Push to main failed. Updated deliverables included." --label "automated-pr"
            }
            echo "Changes committed and pushed successfully (or pull request created)."
            echo "CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Repository Dispatch
        if: env.CHANGED == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: aai540-group3/project
          event-type: create-release

      - name: Cleanup
        if: always()
        run: rm -f manifest_files.zip
