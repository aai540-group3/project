name: Package Deliverables

on:
  push:
    branches:
      - main
    paths:
      - "configs/**"
      - "dvc-opensource.yaml"
      - "dvclive/**"
      - "LICENSE"
      - "notebooks/**"
      - "params.yaml"
      - "README.md"
      - "reports/**"
      - "requirements-pipeline.txt"
      - "src/**"
      - "terraform/main.tf"
  repository_dispatch:
    types:
      - package-deliverables
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  PACKAGES: packages-packaging.txt
  MANIFEST_FILE: manifest.json

jobs:
  check-manifest:
    runs-on: ubuntu-latest
    outputs:
      manifest_changed: ${{ steps.manifest_check.outputs.manifest_changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Cache Apt Archives
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles(env.PACKAGES) }}

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get --yes install --no-install-recommends $(cat ${{ env.PACKAGES }})

      - name: Zip Manifest and Related Files
        run: |
          FILES=$(jq -r '.files[]' $MANIFEST_FILE)
          zip manifest_files.zip $MANIFEST_FILE $FILES

      - name: Compute Current Hash
        id: compute_hash
        run: |
          CURRENT_HASH=$(md5sum manifest_files.zip | cut -d ' ' -f1)
          echo "CURRENT_HASH=$CURRENT_HASH" >> $GITHUB_ENV

      - name: Get Previous Hash
        id: get_previous_hash
        run: |
          PREVIOUS_HASH=$(jq -r '.hash // ""' $MANIFEST_FILE) # Changed to .hash
          echo "PREVIOUS_HASH=$PREVIOUS_HASH" >> $GITHUB_ENV

      - name: Compare Hashes
        id: manifest_check
        run: |
          if [ "$CURRENT_HASH" = "$PREVIOUS_HASH" ]; then
            echo "Hashes match. Skipping package generation."
            echo "manifest_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Hashes do not match. Proceeding with package generation."
            echo "manifest_changed=true" >> $GITHUB_OUTPUT
          fi

  package-repo:
    runs-on: ubuntu-latest
    needs: check-manifest
    if: needs.check-manifest.outputs.manifest_changed == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 1

      - name: Cache Apt Archives
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles(env.PACKAGES) }}

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get --yes install --no-install-recommends $(cat ${{ env.PACKAGES }})

      - name: Zip Repository
        run: |
          FILES=$(jq -r '.files[]' $MANIFEST_FILE)
          zip -r -0 $FILES | pigz -9 > Final_Project_Team_3_Deliverable_3.zip

      - name: Get File Size
        id: get_file_size
        run: |
          FILESIZE=$(stat -c%s Final_Project_Team_3_Deliverable_3.zip)
          echo "FILESIZE=$FILESIZE" >> $GITHUB_ENV

      - name: Get File Hash
        run: |
          echo "FILEHASH=$(sha256sum Final_Project_Team_3_Deliverable_3.zip | awk '{print $1}')" >> $GITHUB_ENV

      - name: Update manifest.json with Hash
        run: |
          jq '.hash = env.FILEHASH' $MANIFEST_FILE > temp_manifest.json
          mv temp_manifest.json $MANIFEST_FILE

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config pull.rebase false

      - name: Push to Remote
        run: |
          git add Final_Project_Team_3_Deliverable_3.zip $MANIFEST_FILE
          if git diff --staged --quiet; then
            echo "No changes detected. Skipping commit and push."
            echo "CHANGED=false" >> $GITHUB_ENV
          else
            git stash
            git pull origin main
            git stash pop
            git add Final_Project_Team_3_Deliverable_3.zip $MANIFEST_FILE
            git commit -m "Size: ${{ env.FILESIZE }} bytes"
            git push origin main || {
              echo "Push failed. Creating a pull request..."
              gh pr create --title "Automated Zip Update" --body "Push to main failed. Updated zip included."
            }
            echo "Changes committed and pushed successfully (or pull request created)."
            echo "CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Repository Dispatch
        if: env.CHANGED == 'true'
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: aai540-group3/project
          event-type: create-release

      - name: Cleanup
        if: always()
        run: rm -f files.txt
