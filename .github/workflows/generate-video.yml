name: Generate Video

on:
  push:
    paths:
      - "Final_Project_Team_3_Deliverable_2.pptx"
      - ".github/workflows/generate-video.yml"
      - "scripts/pptx2video.py"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  PPTX_FILE: ${{ github.workspace }}/Final_Project_Team_3_Deliverable_2.pptx
  MP4_FILE: ${{ github.workspace }}/Final_Project_Team_3_Deliverable_2.mp4
  PDF_FILE: ${{ github.workspace }}/Final_Project_Team_3_Deliverable_2.pdf
  VIDEO_ASSETS_DIR: ${{ github.workspace }}/video-assets
  REPO_NAME: aai540-group3/project
  EVENT_TYPE: create-release

jobs:
  generate-video:
    runs-on: ubuntu-latest
    steps:
      - name: Check out main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 1
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install ffmpeg libreoffice poppler-utils

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install aiohttp openai pdf2image Pillow python-pptx tenacity

      - name: Delete old files
        run: |
          rm -rf "${{ env.MP4_FILE }}"
          rm -rf "${{ env.PDF_FILE }}"
          rm -rf "${{ env.VIDEO_ASSETS_DIR }}"
          mkdir -p "${{ env.VIDEO_ASSETS_DIR }}"

      - name: Generate Video
        id: generate
        run: python scripts/pptx2video.py "${{ env.PPTX_FILE }}"
        continue-on-error: false

      - name: Get video duration
        id: duration
        run: |
          duration=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "${{ env.MP4_FILE }}")
          minutes=$(printf "%.0f" $(echo "$duration/60" | bc))
          seconds=$(printf "%.0f" $(echo "$duration%60" | bc))
          echo "duration=${minutes}m ${seconds}s" >> $GITHUB_OUTPUT

      - name: Copy PDF to root directory
        run: |
          cp "${{ env.PDF_FILE }}" ./
          echo "Copied PDF to root directory"

      - name: Move video to root directory
        run: |
          mv "${{ env.MP4_FILE }}" ./
          echo "Moved PDF to root directory"

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit changes
        run: |
          git add "${{ env.PDF_FILE }}" "${{ env.MP4_FILE }}" "${{ env.VIDEO_ASSETS_DIR }}"
          git commit -m "${{ steps.duration.outputs.duration }} out of 15 minutes" || echo "No changes to commit"
          git pull
          git push

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: ${{ env.REPO_NAME }}
          event-type: ${{ env.EVENT_TYPE }}
