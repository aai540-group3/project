name: Generate Video

on:
  push:
    paths:
      - ".github/workflows/generate-video.yml"
      - "Final_Project_Team_3_Deliverable_2.pptx"
      - "scripts/pptx2video.py"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  REPO_NAME: ${{ secrets.REPO_NAME }}
  EVENT_TYPE: create-release

jobs:
  generate-video:
    runs-on: ubuntu-latest
    steps:
      - name: Check out main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 1
          lfs: true

      - name: Set up environment variables
        run: |
          echo "REPO_ROOT=$(git rev-parse --show-toplevel)" >> $GITHUB_ENV
          echo "PPTX_FILE=$REPO_ROOT/Final_Project_Team_3_Deliverable_2.pptx" >> $GITHUB_ENV
          echo "PDF_FILE=$REPO_ROOT/Final_Project_Team_3_Deliverable_2.pdf" >> $GITHUB_ENV
          echo "MP4_FILE=$REPO_ROOT/Final_Project_Team_3_Deliverable_2.mp4" >> $GITHUB_ENV
          echo "ASSETS_DIR=$REPO_ROOT/video-assets" >> $GITHUB_ENV
          echo "ASSETS_PDF=$REPO_ROOT/video-assets/Final_Project_Team_3_Deliverable_2.pdf" >> $GITHUB_ENV
          echo "ASSETS_MP4=$REPO_ROOT/video-assets/Final_Project_Team_3_Deliverable_2.mp4" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install \
              ffmpeg \
              libreoffice \
              poppler-utils

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
              aiohttp \
              openai \
              pdf2image \
              Pillow \
              python-pptx \
              tenacity

      - name: Check if PPTX file exists
        run: |
          if [ ! -f "$PPTX_FILE" ]; then
            echo "::error::PPTX file not found: $PPTX_FILE"
            exit 1
          fi

      - name: Delete old files
        run: |
          rm -rf $MP4_FILE
          rm -rf $PDF_FILE
          rm -rf $ASSETS_DIR
          mkdir -p $ASSETS_DIR

      - name: Generate Video
        id: generate
        run: python scripts/pptx2video.py "$PPTX_FILE"

      - name: Check video creation
        id: check_video
        run: |
          if [ ! -f "$ASSETS_MP4" ]; then
            echo "::error::Video generation failed. MP4 file not found in $ASSETS_DIR."
            exit 1
          fi

      - name: Copy PDF to root directory
        run: |
          if [ -f "$ASSETS_PDF" ]; then
            cp $ASSETS_PDF $REPO_ROOT
            echo "Copied PDF to root directory"
          else
            echo "::error::PDF file not found in $ASSETS_DIR directory"
            exit 1
          fi

      - name: Move MP4 to root directory
        run: |
          mv $ASSETS_MP4 $REPO_ROOT
          echo "Moved MP4 to root directory"

      - name: Get video duration
        id: duration
        run: |
          duration=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 $MP4_FILE)
          minutes=$(printf "%.0f" $(echo "$duration/60" | bc))
          seconds=$(printf "%.0f" $(echo "$duration%60" | bc))
          echo "VIDEO_DURATION=${minutes}m ${seconds}s" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit changes
        run: |
          git add $PDF_FILE $MP4_FILE
          git commit --allow-empty -m "$VIDEO_DURATION out of 15 minutes"
          git pull
          git push

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.AAI540_GROUP3_DISPATCH_TOKEN }}
          repository: ${{ env.REPO_NAME }}
          event-type: ${{ env.EVENT_TYPE }}
