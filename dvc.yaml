stages:
  ingest:
    cmd: python src/data/ingestion.py
    deps:
      - src/data/ingestion.py
    params:
      - dataset.name
      - dataset.path.raw
    outs:
      - ${dataset.path.raw}/data.csv

  clean:
    cmd: python src/data/cleaning.py
    deps:
      - src/data/cleaning.py
      - ${dataset.path.raw}/data.csv
    params:
      - dataset.path.raw
      - dataset.path.interim
    outs:
      - ${dataset.path.interim}/data.csv

  feature_engineering:
    cmd: python src/data/build_features.py
    deps:
      - src/data/build_features.py
      - ${dataset.path.interim}/data.csv
    params:
      - dataset.path.interim
      - dataset.path.processed
      - feature_engineering
    outs:
      - ${dataset.path.processed}/data_featured.csv

  split:
    cmd: python src/data/splitting.py
    deps:
      - src/data/splitting.py
      - ${dataset.path.interim}/data.csv
    params:
      - dataset.path.interim
      - dataset.path.processed
      - training.split
    outs:
      - ${dataset.path.processed}/train.csv
      - ${dataset.path.processed}/test.csv

  preprocess:
    foreach: ${models}
    do:
      cmd: python src/models/${item}/preprocessing.py model=${item}
      deps:
        - src/models/${item}/preprocessing.py
        - ${dataset.path.processed}/train.csv
      params:
        - dataset.path.processed
        - model.${item}
      outs:
        - ${dataset.path.processed}/${item}/train_preprocessed.csv

  train:
    foreach: ${models}
    do:
      cmd: python src/models/${item}/train.py model=${item}
      deps:
        - src/models/${item}/train.py
        - ${dataset.path.processed}/${item}/train_preprocessed.csv
      params:
        - dataset.path.processed
        - model.${item}
      outs:
        - models/${item}/model.pkl:
            persist: true

  evaluate:
    foreach: ${models}
    do:
      cmd: python src/models/${item}/evaluate.py model=${item}
      deps:
        - src/models/${item}/evaluate.py
        - models/${item}/model.pkl
        - ${dataset.path.processed}/test.csv
      params:
        - dataset.path.processed
        - model.${item}
      metrics:
        - reports/metrics/${item}_metrics.json:
            cache: false

  visualize:
    cmd: python src/visualization/visualize.py
    deps:
      - src/visualization/visualize.py
      - reports/metrics/logistic_regression_metrics.json
      - reports/metrics/autogluon_metrics.json
    outs:
      - reports/figures/model_comparison.png:
          cache: false
    plots:
      - reports/figures/model_comparison.png:
          cache: false
          title: Model Comparison

params:
  - dvclive/params.yaml

artifacts:
  logistic_regression_model:
    path: models/logistic_regression/model.pkl
    type: model
  autogluon_model:
    path: models/autogluon/model.pkl
    type: model
  logistic_regression_metrics:
    path: reports/metrics/logistic_regression_metrics.json
    type: metrics
  autogluon_metrics:
    path: reports/metrics/autogluon_metrics.json
    type: metrics

metrics:
  - dvclive/metrics.json

plots:
  - dvclive/plots/metrics:
      x: step
  - dvclive/plots/images
